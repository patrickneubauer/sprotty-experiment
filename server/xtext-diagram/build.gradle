/*
 * Copyright (C) 2017 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */

ext.title = "Sprotty for Xtext"
description = "Integration of sprotty with Xtext language servers"

dependencies {
	compile project(':diagram-server')
	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${versions.xtext}"
	compile "org.eclipse.lsp4j:org.eclipse.lsp4j:${versions.lsp4j}"
	testCompile "org.eclipse.xtext:org.eclipse.xtext.testing:${versions.xtext}"
	testCompile "junit:junit:${versions.junit}"
}

sourceSets.test.java.srcDir 'src/test/xtext-gen'
sourceSets.test.resources.srcDir 'src/test/xtext-gen'

configurations {
	mwe2 {
		extendsFrom compile
	}
	// Use newer version of Guice at runtime to make sure we get proper error messages
	testRuntimeClasspath.resolutionStrategy {
		eachDependency {
			if (requested.group == 'com.google.inject' && requested.name == 'guice')
				useVersion('4.1.0')
		}
	}
}

dependencies {
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${versions.xtext}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${versions.xtext}"
	mwe2 "org.eclipse.xtext:xtext-antlr-generator:2.1.1"
	mwe2 "org.eclipse.emf:org.eclipse.emf.mwe2.launch:2.9.0.201605261059"
}

task generateTestLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	def workflowFile = 'src/test/java/io/typefox/sprotty/server/xtext/testlanguage/GenerateTestLanguage.mwe2'
	def grammarFile = 'src/test/java/io/typefox/sprotty/server/xtext/testlanguage/TestLanguage.xtext'
	inputs.file workflowFile
	inputs.file grammarFile
	outputs.dir 'src/test/xtext-gen'
	args += workflowFile
	args += '-p'
	args += "rootPath=${projectDir}/.."
}

generateTestXtext.dependsOn(generateTestLanguage)
clean.dependsOn(cleanGenerateTestLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
